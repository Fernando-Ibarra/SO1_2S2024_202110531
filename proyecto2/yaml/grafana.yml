apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Redis
        type: redis-datasource
        access: proxy
        isDefault: true
        orgId: 1
        url: redis://redis-service:6379
        jsonData:
          poolSize: 5
          timeout: 10
        secureJsonData:
          password: M1R3D1SP4SSW0RD
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: default
data:
  dashboard.yaml: |
    {
      "apiVersion": 1,
      "providers": [
        {
          "name": "Redis",
          "folder": "",
          "type": "file",
          "options": {
            "path": "/etc/grafana/provisioning/dashboards"
          }
        }
      ]
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: feribarra27/grafana
          imagePullPolicy: Always
          ports:
            - name: grafana
              containerPort: 3000
          resources:
            requests:
              cpu: "250m"
              memory: "750Mi"
            limits:
              cpu: "250m"
              memory: "750Mi"
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboards
              readOnly: true
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
        - name: grafana-dashboards
          configMap:
            defaultMode: 420
            name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer